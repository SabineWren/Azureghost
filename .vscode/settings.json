{
	// -----------------------------------------------------------
	// ************ Global ************
	// -----------------------------------------------------------
	"cSpell.import": [
		"./.vscode/cSpell.json"
	],
	"editor.detectIndentation": false,
	"editor.insertSpaces": false,
	"files.exclude": {
		"LICENSE": true,
		"node_modules": true,
		"package-lock.json": true
	},
	"files.eol": "\n",
	"files.insertFinalNewline": true,
	"files.trimTrailingWhitespace": true,
	// -----------------------------------------------------------
	// ************ TypeScript ************
	// -----------------------------------------------------------
	"[javascript][typescript]": {
		"editor.codeActionsOnSave": {
			"quickfix.biome": "explicit",
			"source.organizeImports.biome": "explicit"
		},
		"editor.formatOnSave": false
	},
	"[element.ts]": {
		"editor.formatOnSave": false
	},
	"editor.codeActionsOnSave": {
		"quickfix.biome": "never",
		"source.organizeImports.biome": "never"
	},
	// Formatter
	"typescript.tsdk": "node_modules/typescript/lib",
	"typescript.format.indentSwitchCase": false,
	"typescript.format.semicolons": "remove",
	// Imports
	"javascript.preferences.importModuleSpecifier": "non-relative",
	"javascript.preferences.importModuleSpecifierEnding": "js",
	// -----------------------------------------------------------
	// ************ Icons ************
	// -----------------------------------------------------------
	// Can't add workspace-scope custom icons.
	// https://github.com/vscode-icons/vscode-icons/issues/933
	// Can override associations using default icons.
	// https://github.com/vscode-icons/vscode-icons/wiki/ListOfFiles
	// 'filename' boolean controls whether or not to include filename (case insensitive).
	"vsicons.associations.files": [
		// Domain model / Data
		{ "format": "svg", "extensions": [".types.ts"], "icon": "typescriptdef" },
		{ "format": "svg", "extensions": ["types.ts"], "icon": "typescriptdef", "filename": true },
		// Library / Business logic
		{ "format": "svg", "extensions": [".math.ts"], "icon": "haskell" },
		{ "format": "svg", "extensions": ["math.ts"], "icon": "haskell", "filename": true },
		// Tests
		{ "format": "svg", "extensions": [".test.ts"], "icon": "test", "overrides": "testts" },
		{ "format": "svg", "extensions": ["test.ts"], "icon": "test", "filename": true },
		// State management
		{ "format": "svg", "extensions": [".provider.ts"], "icon": "patch" },
		{ "format": "svg", "extensions": ["provider.ts"], "icon": "patch", "filename": true },
	],
	"dotnet.previewSolution-freeWorkspaceMode": true
}